n & (n-1)作用：可以清除n最低位的那个1

明白此作用后，可以用来：
1. 查询n的二进制位中1的个数
2. 判断n是否是2的幂（若n是2的幂，那么n的二进制位必定只有1个1）

Code1:
class Solution {
    int BitCount2(unsigned int n) 
    {
        unsigned int c =0 ;
        for (c =0; n; ++c)
        {
            n &= (n -1) ; // 清除最低位的1
        }
        return c ;
    }
};

Code2:
class Solution {
public:
    bool isPowerOfTwo(int n) {
        if (n <= 0)
            return false;
        return (n & (n - 1)) == 0;
    }
};
